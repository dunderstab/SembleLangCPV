
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftAND2OR2leftNOTleftGRTEQGRTELTLTEDNEleftANDORleftPLUSMINUSDPLUSDMINUSleftMULDIVAND AND2 ARRLEN BREAK COLON COMMA CONST DEF DIV DMINUS DNE DPLUS ELSE EQ EQUALS FOR GRT GRTE IF INT ISARR LBRAC LBRACE LPAREN LT LTE MINUS MUL NAME NOT OR OR2 PLUS RBRAC RBRACE RETURN RPAREN SEMICOLON STRING VAR WHILE\n    code : function\n         | code code\n    \n    function : DEF NAME LPAREN RPAREN statement\n             | DEF NAME LPAREN RPAREN statementc\n    \n    function : DEF NAME LPAREN NAME RPAREN statement\n             | DEF NAME LPAREN NAME RPAREN statementc\n    \n    function : DEF NAME LPAREN args RPAREN statement\n             | DEF NAME LPAREN args RPAREN statementc\n    \n    statement : IF LPAREN expression RPAREN statementc\n              | IF LPAREN expression RPAREN statement\n    \n    statement : IF LPAREN expression RPAREN statementc ELSE statementc\n                | IF LPAREN expression RPAREN statement ELSE statement\n                | IF LPAREN expression RPAREN statementc ELSE statement\n                | IF LPAREN expression RPAREN statement ELSE statementc\n    \n  statement : FOR LPAREN statement expression SEMICOLON statement RPAREN statementc\n            | FOR LPAREN statement expression SEMICOLON statement RPAREN statement\n  \n  statement : WHILE LPAREN expression RPAREN statementc\n            | WHILE LPAREN expression RPAREN statement\n  \n    statement : NAME DPLUS SEMICOLON\n                | NAME DMINUS SEMICOLON\n    \n  statement : DPLUS NAME SEMICOLON\n            | DMINUS NAME SEMICOLON\n  \n  expression : NAME DPLUS\n             | NAME DMINUS\n  \n  expression : DPLUS NAME\n             | DMINUS NAME\n  \n  args : args COMMA NAME\n  \n  args : NAME COMMA NAME\n  \n  argse : argse COMMA expression\n  \n  statement : BREAK SEMICOLON\n  \n  argse : expression COMMA expression\n  \n    statement : NAME LPAREN RPAREN SEMICOLON\n    \n    statement : NAME LPAREN argse RPAREN SEMICOLON\n    \n    statement : NAME LPAREN expression RPAREN SEMICOLON\n    \n    statements : statement statements\n               | statement statement\n    \n    statementc : LBRAC statement RBRAC\n               | LBRAC statements RBRAC\n               | LBRAC empty RBRAC\n    \n    expression : expression COLON LBRACE argse RBRACE\n    \n    expression : expression COLON LBRACE expression RBRACE\n    \n    expression : expression COLON LBRACE RBRACE\n    \n    expression : LBRACE argse RBRACE\n    \n    expression : LBRACE expression RBRACE\n    \n    expression : LBRACE RBRACE\n    \n    statement : VAR NAME EQUALS expression SEMICOLON\n    \n    statement : NAME EQUALS expression SEMICOLON\n    \n  statement : expression LBRACE expression RBRACE EQUALS expression SEMICOLON\n  \n    statement : RETURN expression SEMICOLON\n    \n    expression : INT\n               | NAME\n    \n    expression : expression LBRACE expression RBRACE\n    \n  expression : STRING\n  \n    expression : NOT expression\n    \n    expression : ISARR LPAREN expression RPAREN\n    \n    expression : ARRLEN LPAREN expression RPAREN\n    \n    expression : NAME LPAREN RPAREN \n    \n    expression : NAME LPAREN argse RPAREN\n    \n    expression : NAME LPAREN expression RPAREN\n    \n    expression : expression MUL expression\n               | expression DIV expression\n               | expression PLUS expression\n               | expression MINUS expression\n               | expression AND expression\n               | expression AND2 expression\n               | expression OR2 expression\n               | expression OR expression\n               | expression DNE expression\n               | expression EQ expression\n               | expression GRT expression\n               | expression GRTE expression\n               | expression LT expression\n               | expression LTE expression\n    \n    empty :\n    '
    
_lr_action_items = {'DEF':([0,1,2,4,13,14,33,34,61,76,77,79,80,104,105,117,119,121,122,125,128,145,146,147,148,153,154,155,163,164,165,166,167,169,170,],[3,3,-1,3,-3,-4,-5,-6,-30,-7,-8,-19,-20,-21,-22,-49,-37,-38,-39,-32,-47,-33,-34,-9,-10,-17,-18,-46,-11,-13,-12,-14,-48,-16,-15,]),'$end':([1,2,4,13,14,33,34,61,76,77,79,80,104,105,117,119,121,122,125,128,145,146,147,148,153,154,155,163,164,165,166,167,169,170,],[0,-1,-2,-3,-4,-5,-6,-30,-7,-8,-19,-20,-21,-22,-49,-37,-38,-39,-32,-47,-33,-34,-9,-10,-17,-18,-46,-11,-13,-12,-14,-48,-16,-15,]),'NAME':([3,6,8,10,11,19,20,22,23,24,25,28,31,32,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,67,68,70,74,75,79,80,87,102,104,105,106,108,109,111,114,117,118,119,121,122,125,128,129,135,145,146,147,148,149,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[5,7,12,12,35,59,60,62,66,66,12,66,12,78,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,12,66,-30,115,116,12,66,66,-19,-20,66,66,-21,-22,66,66,66,66,66,-49,12,-37,-38,-39,-32,-47,12,12,-33,-34,-9,-10,66,12,-17,-18,-46,12,12,-11,-13,-12,-14,-48,12,-16,-15,]),'LPAREN':([5,12,15,17,18,29,30,66,],[6,38,40,57,58,74,75,114,]),'RPAREN':([6,7,9,26,27,35,38,61,64,66,73,78,79,80,82,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,107,110,112,113,114,115,116,117,119,121,122,123,124,125,128,133,137,139,140,141,142,143,144,145,146,147,148,150,151,153,154,155,156,157,158,162,163,164,165,166,167,169,170,],[8,10,31,-50,-53,-28,81,-30,-45,-51,-54,-27,-19,-20,126,127,129,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,135,-21,-22,-43,-44,-23,-24,140,-25,-26,-49,-37,-38,-39,143,144,-32,-47,-42,-29,-31,-57,157,158,-55,-56,-33,-34,-9,-10,-41,-40,-17,-18,-46,-52,-58,-59,168,-11,-13,-12,-14,-48,-16,-15,]),'COMMA':([7,9,26,27,35,63,64,65,66,73,78,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,110,112,113,115,116,131,132,133,137,139,140,141,142,143,144,150,151,156,157,158,],[11,32,-50,-53,-28,108,-45,111,-51,-54,-27,108,111,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-43,-44,-23,-24,-25,-26,111,108,-42,-29,-31,-57,108,111,-55,-56,-41,-40,-52,-58,-59,]),'IF':([8,10,25,31,57,61,70,79,80,104,105,117,118,119,121,122,125,128,129,135,145,146,147,148,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[15,15,15,15,15,-30,15,-19,-20,-21,-22,-49,15,-37,-38,-39,-32,-47,15,15,-33,-34,-9,-10,15,-17,-18,-46,15,15,-11,-13,-12,-14,-48,15,-16,-15,]),'FOR':([8,10,25,31,57,61,70,79,80,104,105,117,118,119,121,122,125,128,129,135,145,146,147,148,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[17,17,17,17,17,-30,17,-19,-20,-21,-22,-49,17,-37,-38,-39,-32,-47,17,17,-33,-34,-9,-10,17,-17,-18,-46,17,17,-11,-13,-12,-14,-48,17,-16,-15,]),'WHILE':([8,10,25,31,57,61,70,79,80,104,105,117,118,119,121,122,125,128,129,135,145,146,147,148,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[18,18,18,18,18,-30,18,-19,-20,-21,-22,-49,18,-37,-38,-39,-32,-47,18,18,-33,-34,-9,-10,18,-17,-18,-46,18,18,-11,-13,-12,-14,-48,18,-16,-15,]),'DPLUS':([8,10,12,23,24,25,28,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,66,70,74,75,79,80,87,102,104,105,106,108,109,111,114,117,118,119,121,122,125,128,129,135,145,146,147,148,149,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[19,19,36,67,67,19,67,19,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,19,67,-30,112,19,67,67,-19,-20,67,67,-21,-22,67,67,67,67,67,-49,19,-37,-38,-39,-32,-47,19,19,-33,-34,-9,-10,67,19,-17,-18,-46,19,19,-11,-13,-12,-14,-48,19,-16,-15,]),'DMINUS':([8,10,12,23,24,25,28,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,66,70,74,75,79,80,87,102,104,105,106,108,109,111,114,117,118,119,121,122,125,128,129,135,145,146,147,148,149,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[20,20,37,68,68,20,68,20,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,20,68,-30,113,20,68,68,-19,-20,68,68,-21,-22,68,68,68,68,68,-49,20,-37,-38,-39,-32,-47,20,20,-33,-34,-9,-10,68,20,-17,-18,-46,20,20,-11,-13,-12,-14,-48,20,-16,-15,]),'BREAK':([8,10,25,31,57,61,70,79,80,104,105,117,118,119,121,122,125,128,129,135,145,146,147,148,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[21,21,21,21,21,-30,21,-19,-20,-21,-22,-49,21,-37,-38,-39,-32,-47,21,21,-33,-34,-9,-10,21,-17,-18,-46,21,21,-11,-13,-12,-14,-48,21,-16,-15,]),'VAR':([8,10,25,31,57,61,70,79,80,104,105,117,118,119,121,122,125,128,129,135,145,146,147,148,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[22,22,22,22,22,-30,22,-19,-20,-21,-22,-49,22,-37,-38,-39,-32,-47,22,22,-33,-34,-9,-10,22,-17,-18,-46,22,22,-11,-13,-12,-14,-48,22,-16,-15,]),'RETURN':([8,10,25,31,57,61,70,79,80,104,105,117,118,119,121,122,125,128,129,135,145,146,147,148,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[24,24,24,24,24,-30,24,-19,-20,-21,-22,-49,24,-37,-38,-39,-32,-47,24,24,-33,-34,-9,-10,24,-17,-18,-46,24,24,-11,-13,-12,-14,-48,24,-16,-15,]),'LBRAC':([8,10,31,129,135,159,160,168,],[25,25,25,25,25,25,25,25,]),'LBRACE':([8,10,12,16,23,24,25,26,27,28,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,66,69,70,73,74,75,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,],[23,23,-51,41,23,23,23,-50,-53,23,23,-23,-24,23,23,23,23,87,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-25,-26,-30,-45,109,-51,109,23,-54,23,23,-19,-20,-57,109,109,109,109,23,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,23,109,-21,-22,23,-43,23,23,-44,23,-23,-24,23,-25,-26,-49,23,-37,-38,-39,109,109,-32,-58,-59,-47,23,-52,109,-42,109,23,109,109,109,109,-57,109,-55,-56,-33,-34,-9,-10,23,-41,-40,23,-17,-18,-46,-52,-58,-59,23,23,109,-11,-13,-12,-14,-48,23,-16,-15,]),'INT':([8,10,23,24,25,28,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,70,74,75,79,80,87,102,104,105,106,108,109,111,114,117,118,119,121,122,125,128,129,135,145,146,147,148,149,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-30,26,26,26,-19,-20,26,26,-21,-22,26,26,26,26,26,-49,26,-37,-38,-39,-32,-47,26,26,-33,-34,-9,-10,26,26,-17,-18,-46,26,26,-11,-13,-12,-14,-48,26,-16,-15,]),'STRING':([8,10,23,24,25,28,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,70,74,75,79,80,87,102,104,105,106,108,109,111,114,117,118,119,121,122,125,128,129,135,145,146,147,148,149,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-30,27,27,27,-19,-20,27,27,-21,-22,27,27,27,27,27,-49,27,-37,-38,-39,-32,-47,27,27,-33,-34,-9,-10,27,27,-17,-18,-46,27,27,-11,-13,-12,-14,-48,27,-16,-15,]),'NOT':([8,10,23,24,25,28,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,70,74,75,79,80,87,102,104,105,106,108,109,111,114,117,118,119,121,122,125,128,129,135,145,146,147,148,149,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-30,28,28,28,-19,-20,28,28,-21,-22,28,28,28,28,28,-49,28,-37,-38,-39,-32,-47,28,28,-33,-34,-9,-10,28,28,-17,-18,-46,28,28,-11,-13,-12,-14,-48,28,-16,-15,]),'ISARR':([8,10,23,24,25,28,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,70,74,75,79,80,87,102,104,105,106,108,109,111,114,117,118,119,121,122,125,128,129,135,145,146,147,148,149,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-30,29,29,29,-19,-20,29,29,-21,-22,29,29,29,29,29,-49,29,-37,-38,-39,-32,-47,29,29,-33,-34,-9,-10,29,29,-17,-18,-46,29,29,-11,-13,-12,-14,-48,29,-16,-15,]),'ARRLEN':([8,10,23,24,25,28,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,70,74,75,79,80,87,102,104,105,106,108,109,111,114,117,118,119,121,122,125,128,129,135,145,146,147,148,149,152,153,154,155,159,160,163,164,165,166,167,168,169,170,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-30,30,30,30,-19,-20,30,30,-21,-22,30,30,30,30,30,-49,30,-37,-38,-39,-32,-47,30,30,-33,-34,-9,-10,30,30,-17,-18,-46,30,30,-11,-13,-12,-14,-48,30,-16,-15,]),'EQUALS':([12,62,130,],[39,106,149,]),'COLON':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,42,-50,-53,-23,-24,-25,-26,-45,42,-51,42,-54,-57,42,42,42,42,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,42,-43,-44,-23,-24,-25,-26,42,42,-58,-59,-52,42,-42,42,42,42,42,42,-57,42,-55,-56,-41,-40,-52,-58,-59,42,]),'MUL':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,43,-50,-53,-23,-24,-25,-26,-45,43,-51,43,43,-57,43,43,43,43,-60,-61,43,43,43,43,43,43,43,43,43,43,43,43,43,-43,-44,-23,-24,-25,-26,43,43,-58,-59,-52,43,-42,43,43,43,43,43,-57,43,-55,-56,-41,-40,-52,-58,-59,43,]),'DIV':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,44,-50,-53,-23,-24,-25,-26,-45,44,-51,44,44,-57,44,44,44,44,-60,-61,44,44,44,44,44,44,44,44,44,44,44,44,44,-43,-44,-23,-24,-25,-26,44,44,-58,-59,-52,44,-42,44,44,44,44,44,-57,44,-55,-56,-41,-40,-52,-58,-59,44,]),'PLUS':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,45,-50,-53,-23,-24,-25,-26,-45,45,-51,45,45,-57,45,45,45,45,-60,-61,-62,-63,45,45,45,45,45,45,45,45,45,45,45,-43,-44,-23,-24,-25,-26,45,45,-58,-59,-52,45,-42,45,45,45,45,45,-57,45,-55,-56,-41,-40,-52,-58,-59,45,]),'MINUS':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,46,-50,-53,-23,-24,-25,-26,-45,46,-51,46,46,-57,46,46,46,46,-60,-61,-62,-63,46,46,46,46,46,46,46,46,46,46,46,-43,-44,-23,-24,-25,-26,46,46,-58,-59,-52,46,-42,46,46,46,46,46,-57,46,-55,-56,-41,-40,-52,-58,-59,46,]),'AND':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,47,-50,-53,-23,-24,-25,-26,-45,47,-51,47,47,-57,47,47,47,47,-60,-61,-62,-63,-64,47,47,-67,47,47,47,47,47,47,47,-43,-44,-23,-24,-25,-26,47,47,-58,-59,-52,47,-42,47,47,47,47,47,-57,47,-55,-56,-41,-40,-52,-58,-59,47,]),'AND2':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,48,-50,-53,-23,-24,-25,-26,-45,48,-51,48,-54,-57,48,48,48,48,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,48,-43,-44,-23,-24,-25,-26,48,48,-58,-59,-52,48,-42,48,48,48,48,48,-57,48,-55,-56,-41,-40,-52,-58,-59,48,]),'OR2':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,49,-50,-53,-23,-24,-25,-26,-45,49,-51,49,-54,-57,49,49,49,49,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,49,-43,-44,-23,-24,-25,-26,49,49,-58,-59,-52,49,-42,49,49,49,49,49,-57,49,-55,-56,-41,-40,-52,-58,-59,49,]),'OR':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,50,-50,-53,-23,-24,-25,-26,-45,50,-51,50,50,-57,50,50,50,50,-60,-61,-62,-63,-64,50,50,-67,50,50,50,50,50,50,50,-43,-44,-23,-24,-25,-26,50,50,-58,-59,-52,50,-42,50,50,50,50,50,-57,50,-55,-56,-41,-40,-52,-58,-59,50,]),'DNE':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,51,-50,-53,-23,-24,-25,-26,-45,51,-51,51,51,-57,51,51,51,51,-60,-61,-62,-63,-64,51,51,-67,-68,-69,-70,-71,-72,-73,51,-43,-44,-23,-24,-25,-26,51,51,-58,-59,-52,51,-42,51,51,51,51,51,-57,51,-55,-56,-41,-40,-52,-58,-59,51,]),'EQ':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,52,-50,-53,-23,-24,-25,-26,-45,52,-51,52,52,-57,52,52,52,52,-60,-61,-62,-63,-64,52,52,-67,-68,-69,-70,-71,-72,-73,52,-43,-44,-23,-24,-25,-26,52,52,-58,-59,-52,52,-42,52,52,52,52,52,-57,52,-55,-56,-41,-40,-52,-58,-59,52,]),'GRT':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,53,-50,-53,-23,-24,-25,-26,-45,53,-51,53,53,-57,53,53,53,53,-60,-61,-62,-63,-64,53,53,-67,-68,-69,-70,-71,-72,-73,53,-43,-44,-23,-24,-25,-26,53,53,-58,-59,-52,53,-42,53,53,53,53,53,-57,53,-55,-56,-41,-40,-52,-58,-59,53,]),'GRTE':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,54,-50,-53,-23,-24,-25,-26,-45,54,-51,54,54,-57,54,54,54,54,-60,-61,-62,-63,-64,54,54,-67,-68,-69,-70,-71,-72,-73,54,-43,-44,-23,-24,-25,-26,54,54,-58,-59,-52,54,-42,54,54,54,54,54,-57,54,-55,-56,-41,-40,-52,-58,-59,54,]),'LT':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,55,-50,-53,-23,-24,-25,-26,-45,55,-51,55,55,-57,55,55,55,55,-60,-61,-62,-63,-64,55,55,-67,-68,-69,-70,-71,-72,-73,55,-43,-44,-23,-24,-25,-26,55,55,-58,-59,-52,55,-42,55,55,55,55,55,-57,55,-55,-56,-41,-40,-52,-58,-59,55,]),'LTE':([12,16,26,27,36,37,59,60,64,65,66,69,73,81,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,110,112,113,115,116,123,124,126,127,130,131,133,134,136,137,138,139,140,142,143,144,150,151,156,157,158,161,],[-51,56,-50,-53,-23,-24,-25,-26,-45,56,-51,56,56,-57,56,56,56,56,-60,-61,-62,-63,-64,56,56,-67,-68,-69,-70,-71,-72,-73,56,-43,-44,-23,-24,-25,-26,56,56,-58,-59,-52,56,-42,56,56,56,56,56,-57,56,-55,-56,-41,-40,-52,-58,-59,56,]),'SEMICOLON':([21,26,27,36,37,59,60,64,66,69,73,81,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,110,112,113,115,116,126,127,133,134,136,140,143,144,150,151,156,157,158,161,],[61,-50,-53,79,80,104,105,-45,-51,117,-54,125,128,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-43,-44,-23,-24,-25,-26,145,146,-42,152,155,-57,-55,-56,-41,-40,-52,-58,-59,167,]),'RBRACE':([23,26,27,63,64,65,66,73,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,110,112,113,115,116,131,132,133,137,138,139,140,143,144,150,151,156,157,158,],[64,-50,-53,107,-45,110,-51,-54,130,133,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-43,-44,-23,-24,-25,-26,150,151,-42,-29,156,-31,-57,-55,-56,-41,-40,-52,-58,-59,]),'RBRAC':([25,61,70,71,72,79,80,104,105,117,118,119,120,121,122,125,128,145,146,147,148,153,154,155,163,164,165,166,167,169,170,],[-74,-30,119,121,122,-19,-20,-21,-22,-49,-36,-37,-35,-38,-39,-32,-47,-33,-34,-9,-10,-17,-18,-46,-11,-13,-12,-14,-48,-16,-15,]),'ELSE':([61,79,80,104,105,117,119,121,122,125,128,145,146,147,148,153,154,155,163,164,165,166,167,169,170,],[-30,-19,-20,-21,-22,-49,-37,-38,-39,-32,-47,-33,-34,159,160,-17,-18,-46,-11,-13,-12,-14,-48,-16,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,1,4,],[1,4,4,]),'function':([0,1,4,],[2,2,2,]),'args':([6,],[9,]),'statement':([8,10,25,31,57,70,118,129,135,152,159,160,168,],[13,33,70,76,102,118,118,148,154,162,164,165,169,]),'statementc':([8,10,31,129,135,159,160,168,],[14,34,77,147,153,163,166,170,]),'expression':([8,10,23,24,25,28,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,70,74,75,87,102,106,108,109,111,114,118,129,135,149,152,159,160,168,],[16,16,65,69,16,73,16,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,16,103,16,123,124,131,134,136,137,138,139,142,16,16,16,161,16,16,16,16,]),'argse':([23,38,87,114,],[63,82,132,141,]),'statements':([25,70,118,],[71,120,120,]),'empty':([25,],[72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> function','code',1,'p_code','main.py',154),
  ('code -> code code','code',2,'p_code','main.py',155),
  ('function -> DEF NAME LPAREN RPAREN statement','function',5,'p_functionnoargs','main.py',161),
  ('function -> DEF NAME LPAREN RPAREN statementc','function',5,'p_functionnoargs','main.py',162),
  ('function -> DEF NAME LPAREN NAME RPAREN statement','function',6,'p_functiononearg','main.py',168),
  ('function -> DEF NAME LPAREN NAME RPAREN statementc','function',6,'p_functiononearg','main.py',169),
  ('function -> DEF NAME LPAREN args RPAREN statement','function',6,'p_functionmanyargs','main.py',175),
  ('function -> DEF NAME LPAREN args RPAREN statementc','function',6,'p_functionmanyargs','main.py',176),
  ('statement -> IF LPAREN expression RPAREN statementc','statement',5,'p_statement_if','main.py',182),
  ('statement -> IF LPAREN expression RPAREN statement','statement',5,'p_statement_if','main.py',183),
  ('statement -> IF LPAREN expression RPAREN statementc ELSE statementc','statement',7,'p_statement_ifelse','main.py',189),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_ifelse','main.py',190),
  ('statement -> IF LPAREN expression RPAREN statementc ELSE statement','statement',7,'p_statement_ifelse','main.py',191),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statementc','statement',7,'p_statement_ifelse','main.py',192),
  ('statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc','statement',8,'p_statement_for','main.py',198),
  ('statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement','statement',8,'p_statement_for','main.py',199),
  ('statement -> WHILE LPAREN expression RPAREN statementc','statement',5,'p_statement_while','main.py',207),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement_while','main.py',208),
  ('statement -> NAME DPLUS SEMICOLON','statement',3,'p_statement_dplus','main.py',216),
  ('statement -> NAME DMINUS SEMICOLON','statement',3,'p_statement_dplus','main.py',217),
  ('statement -> DPLUS NAME SEMICOLON','statement',3,'p_statement_pdplus','main.py',225),
  ('statement -> DMINUS NAME SEMICOLON','statement',3,'p_statement_pdplus','main.py',226),
  ('expression -> NAME DPLUS','expression',2,'p_expression_dplus','main.py',233),
  ('expression -> NAME DMINUS','expression',2,'p_expression_dplus','main.py',234),
  ('expression -> DPLUS NAME','expression',2,'p_expression_dplusp','main.py',240),
  ('expression -> DMINUS NAME','expression',2,'p_expression_dplusp','main.py',241),
  ('args -> args COMMA NAME','args',3,'p_args','main.py',257),
  ('args -> NAME COMMA NAME','args',3,'p_argso','main.py',264),
  ('argse -> argse COMMA expression','argse',3,'p_argse','main.py',270),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement_break','main.py',277),
  ('argse -> expression COMMA expression','argse',3,'p_argseo','main.py',284),
  ('statement -> NAME LPAREN RPAREN SEMICOLON','statement',4,'p_st_fcallna','main.py',291),
  ('statement -> NAME LPAREN argse RPAREN SEMICOLON','statement',5,'p_st_fcall','main.py',297),
  ('statement -> NAME LPAREN expression RPAREN SEMICOLON','statement',5,'p_st_fcalla','main.py',303),
  ('statements -> statement statements','statements',2,'p_statements','main.py',310),
  ('statements -> statement statement','statements',2,'p_statements','main.py',311),
  ('statementc -> LBRAC statement RBRAC','statementc',3,'p_statementc','main.py',317),
  ('statementc -> LBRAC statements RBRAC','statementc',3,'p_statementc','main.py',318),
  ('statementc -> LBRAC empty RBRAC','statementc',3,'p_statementc','main.py',319),
  ('expression -> expression COLON LBRACE argse RBRACE','expression',5,'p_expression_arr','main.py',325),
  ('expression -> expression COLON LBRACE expression RBRACE','expression',5,'p_expression_arrone','main.py',331),
  ('expression -> expression COLON LBRACE RBRACE','expression',4,'p_expression_arrno','main.py',337),
  ('expression -> LBRACE argse RBRACE','expression',3,'p_expression_arra','main.py',343),
  ('expression -> LBRACE expression RBRACE','expression',3,'p_expression_arronea','main.py',349),
  ('expression -> LBRACE RBRACE','expression',2,'p_expression_arrnoa','main.py',355),
  ('statement -> VAR NAME EQUALS expression SEMICOLON','statement',5,'p_statementvardef','main.py',362),
  ('statement -> NAME EQUALS expression SEMICOLON','statement',4,'p_statementvup','main.py',368),
  ('statement -> expression LBRACE expression RBRACE EQUALS expression SEMICOLON','statement',7,'p_statement_indexassign','main.py',374),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statementreturn','main.py',382),
  ('expression -> INT','expression',1,'p_expression_basic','main.py',388),
  ('expression -> NAME','expression',1,'p_expression_basic','main.py',389),
  ('expression -> expression LBRACE expression RBRACE','expression',4,'p_expression_indexing','main.py',395),
  ('expression -> STRING','expression',1,'p_expression_str','main.py',401),
  ('expression -> NOT expression','expression',2,'p_expression_unary','main.py',407),
  ('expression -> ISARR LPAREN expression RPAREN','expression',4,'p_expression_carr','main.py',413),
  ('expression -> ARRLEN LPAREN expression RPAREN','expression',4,'p_expression_larr','main.py',419),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_e_fcallna','main.py',427),
  ('expression -> NAME LPAREN argse RPAREN','expression',4,'p_e_fcall','main.py',433),
  ('expression -> NAME LPAREN expression RPAREN','expression',4,'p_e_fcalla','main.py',439),
  ('expression -> expression MUL expression','expression',3,'p_expression_primitive','main.py',451),
  ('expression -> expression DIV expression','expression',3,'p_expression_primitive','main.py',452),
  ('expression -> expression PLUS expression','expression',3,'p_expression_primitive','main.py',453),
  ('expression -> expression MINUS expression','expression',3,'p_expression_primitive','main.py',454),
  ('expression -> expression AND expression','expression',3,'p_expression_primitive','main.py',455),
  ('expression -> expression AND2 expression','expression',3,'p_expression_primitive','main.py',456),
  ('expression -> expression OR2 expression','expression',3,'p_expression_primitive','main.py',457),
  ('expression -> expression OR expression','expression',3,'p_expression_primitive','main.py',458),
  ('expression -> expression DNE expression','expression',3,'p_expression_primitive','main.py',459),
  ('expression -> expression EQ expression','expression',3,'p_expression_primitive','main.py',460),
  ('expression -> expression GRT expression','expression',3,'p_expression_primitive','main.py',461),
  ('expression -> expression GRTE expression','expression',3,'p_expression_primitive','main.py',462),
  ('expression -> expression LT expression','expression',3,'p_expression_primitive','main.py',463),
  ('expression -> expression LTE expression','expression',3,'p_expression_primitive','main.py',464),
  ('empty -> <empty>','empty',0,'p_empty','main.py',474),
]
