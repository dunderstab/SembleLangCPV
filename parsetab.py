
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftAND2OR2leftNOTleftGRTEQGRTELTLTEDNEleftANDORleftPLUSMINUSDPLUSDMINUSleftMULDIVAND AND2 COMMA DEF DIV DMINUS DNE DPLUS ELSE EQ EQUALS GRT GRTE IF INT LBRAC LPAREN LT LTE MINUS MUL NAME NOT OR OR2 PLUS RBRAC RETURN RPAREN SEMICOLON STRING\n    code : function\n         | code code\n    \n    function : DEF NAME LPAREN RPAREN statement\n             | DEF NAME LPAREN RPAREN statementc\n    \n    function : DEF NAME LPAREN NAME RPAREN statement\n             | DEF NAME LPAREN NAME RPAREN statementc\n    \n    function : DEF NAME LPAREN args RPAREN statement\n             | DEF NAME LPAREN args RPAREN statementc\n    \n    statement : IF LPAREN expression RPAREN statementc\n              | IF LPAREN expression RPAREN statement\n    \n    statement : IF LPAREN expression RPAREN statementc ELSE statementc\n                | IF LPAREN expression RPAREN statement ELSE statement\n                | IF LPAREN expression RPAREN statementc ELSE statement\n                | IF LPAREN expression RPAREN statement ELSE statementc\n    \n    statement : NAME DPLUS SEMICOLON\n                | NAME DMINUS SEMICOLON\n    \n  statement : DPLUS NAME SEMICOLON\n            | DMINUS NAME SEMICOLON\n  \n  expression : NAME DPLUS\n             | NAME DMINUS\n  \n  expression : DPLUS NAME\n             | DMINUS NAME\n  \n  args : args COMMA NAME\n  \n  args : NAME COMMA NAME\n  \n  argse : argse COMMA expression\n  \n  argse : expression COMMA expression\n  \n    statement : NAME LPAREN RPAREN SEMICOLON\n    \n    statement : NAME LPAREN argse RPAREN SEMICOLON\n    \n    statement : NAME LPAREN expression RPAREN SEMICOLON\n    \n    statements : statement statements\n               | statement statement\n    \n    statementc : LBRAC statement RBRAC\n               | LBRAC statements RBRAC\n               | LBRAC empty RBRAC\n    \n    statement : NAME EQUALS expression SEMICOLON\n    \n    statement : RETURN expression SEMICOLON\n    \n    expression : INT\n               | NAME\n    \n  expression : STRING\n  \n    expression : NOT expression\n    \n    expression : NAME LPAREN RPAREN \n    \n    expression : NAME LPAREN argse RPAREN\n    \n    expression : NAME LPAREN expression RPAREN\n    \n    expression : expression MUL expression\n               | expression DIV expression\n               | expression PLUS expression\n               | expression MINUS expression\n               | expression AND expression\n               | expression AND2 expression\n               | expression OR2 expression\n               | expression OR expression\n               | expression DNE expression\n               | expression EQ expression\n               | expression GRT expression\n               | expression GRTE expression\n               | expression LT expression\n               | expression LTE expression\n    \n    empty :\n    '
    
_lr_action_items = {'DEF':([0,1,2,4,13,14,22,23,42,43,45,46,52,53,54,76,78,79,80,85,104,106,108,109,114,115,116,117,],[3,3,-1,3,-3,-4,-5,-6,-7,-8,-15,-16,-17,-18,-36,-32,-33,-34,-27,-35,-28,-29,-9,-10,-11,-13,-12,-14,]),'$end':([1,2,4,13,14,22,23,42,43,45,46,52,53,54,76,78,79,80,85,104,106,108,109,114,115,116,117,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-15,-16,-17,-18,-36,-32,-33,-34,-27,-35,-28,-29,-9,-10,-11,-13,-12,-14,]),'NAME':([3,6,8,10,11,16,17,18,19,20,21,27,28,29,34,35,38,39,45,46,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,76,78,79,80,82,84,85,86,104,106,108,109,112,113,114,115,116,117,],[5,7,12,12,24,30,31,33,12,12,44,33,33,33,72,73,33,12,-15,-16,-17,-18,-36,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,12,-32,-33,-34,-27,33,33,-35,12,-28,-29,-9,-10,12,12,-11,-13,-12,-14,]),'LPAREN':([5,12,15,33,],[6,27,29,71,]),'RPAREN':([6,7,9,24,27,33,36,37,44,48,49,51,69,70,71,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,107,110,111,],[8,10,20,-24,47,-38,-37,-39,-23,81,83,86,-19,-20,101,-21,-22,-40,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-41,110,111,-25,-26,-42,-43,]),'COMMA':([7,9,24,33,36,37,44,48,49,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,107,110,111,],[11,21,-24,-38,-37,-39,-23,82,84,-19,-20,-21,-22,-40,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-41,82,84,-25,-26,-42,-43,]),'IF':([8,10,19,20,39,45,46,52,53,54,75,76,78,79,80,85,86,104,106,108,109,112,113,114,115,116,117,],[15,15,15,15,15,-15,-16,-17,-18,-36,15,-32,-33,-34,-27,-35,15,-28,-29,-9,-10,15,15,-11,-13,-12,-14,]),'DPLUS':([8,10,12,18,19,20,27,28,29,33,38,39,45,46,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,76,78,79,80,82,84,85,86,104,106,108,109,112,113,114,115,116,117,],[16,16,25,34,16,16,34,34,34,69,34,16,-15,-16,-17,-18,-36,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,16,-32,-33,-34,-27,34,34,-35,16,-28,-29,-9,-10,16,16,-11,-13,-12,-14,]),'DMINUS':([8,10,12,18,19,20,27,28,29,33,38,39,45,46,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,76,78,79,80,82,84,85,86,104,106,108,109,112,113,114,115,116,117,],[17,17,26,35,17,17,35,35,35,70,35,17,-15,-16,-17,-18,-36,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,17,-32,-33,-34,-27,35,35,-35,17,-28,-29,-9,-10,17,17,-11,-13,-12,-14,]),'RETURN':([8,10,19,20,39,45,46,52,53,54,75,76,78,79,80,85,86,104,106,108,109,112,113,114,115,116,117,],[18,18,18,18,18,-15,-16,-17,-18,-36,18,-32,-33,-34,-27,-35,18,-28,-29,-9,-10,18,18,-11,-13,-12,-14,]),'LBRAC':([8,10,20,86,112,113,],[19,19,19,19,19,19,]),'EQUALS':([12,],[28,]),'INT':([18,27,28,29,38,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,82,84,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'STRING':([18,27,28,29,38,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,82,84,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'NOT':([18,27,28,29,38,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,82,84,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'RBRAC':([19,39,40,41,45,46,52,53,54,75,76,77,78,79,80,85,104,106,108,109,114,115,116,117,],[-58,76,78,79,-15,-16,-17,-18,-36,-31,-32,-30,-33,-34,-27,-35,-28,-29,-9,-10,-11,-13,-12,-14,]),'SEMICOLON':([25,26,30,31,32,33,36,37,47,50,69,70,72,73,74,81,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,110,111,],[45,46,52,53,54,-38,-37,-39,80,85,-19,-20,-21,-22,-40,104,106,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-41,-42,-43,]),'MUL':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[55,-38,-37,-39,55,55,55,-19,-20,-21,-22,55,-44,-45,55,55,55,55,55,55,55,55,55,55,55,55,-41,55,55,55,-42,-43,]),'DIV':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[56,-38,-37,-39,56,56,56,-19,-20,-21,-22,56,-44,-45,56,56,56,56,56,56,56,56,56,56,56,56,-41,56,56,56,-42,-43,]),'PLUS':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[57,-38,-37,-39,57,57,57,-19,-20,-21,-22,57,-44,-45,-46,-47,57,57,57,57,57,57,57,57,57,57,-41,57,57,57,-42,-43,]),'MINUS':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[58,-38,-37,-39,58,58,58,-19,-20,-21,-22,58,-44,-45,-46,-47,58,58,58,58,58,58,58,58,58,58,-41,58,58,58,-42,-43,]),'AND':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[59,-38,-37,-39,59,59,59,-19,-20,-21,-22,59,-44,-45,-46,-47,-48,59,59,-51,59,59,59,59,59,59,-41,59,59,59,-42,-43,]),'AND2':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[60,-38,-37,-39,60,60,60,-19,-20,-21,-22,-40,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-41,60,60,60,-42,-43,]),'OR2':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[61,-38,-37,-39,61,61,61,-19,-20,-21,-22,-40,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-41,61,61,61,-42,-43,]),'OR':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[62,-38,-37,-39,62,62,62,-19,-20,-21,-22,62,-44,-45,-46,-47,-48,62,62,-51,62,62,62,62,62,62,-41,62,62,62,-42,-43,]),'DNE':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[63,-38,-37,-39,63,63,63,-19,-20,-21,-22,63,-44,-45,-46,-47,-48,63,63,-51,-52,-53,-54,-55,-56,-57,-41,63,63,63,-42,-43,]),'EQ':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[64,-38,-37,-39,64,64,64,-19,-20,-21,-22,64,-44,-45,-46,-47,-48,64,64,-51,-52,-53,-54,-55,-56,-57,-41,64,64,64,-42,-43,]),'GRT':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[65,-38,-37,-39,65,65,65,-19,-20,-21,-22,65,-44,-45,-46,-47,-48,65,65,-51,-52,-53,-54,-55,-56,-57,-41,65,65,65,-42,-43,]),'GRTE':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[66,-38,-37,-39,66,66,66,-19,-20,-21,-22,66,-44,-45,-46,-47,-48,66,66,-51,-52,-53,-54,-55,-56,-57,-41,66,66,66,-42,-43,]),'LT':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[67,-38,-37,-39,67,67,67,-19,-20,-21,-22,67,-44,-45,-46,-47,-48,67,67,-51,-52,-53,-54,-55,-56,-57,-41,67,67,67,-42,-43,]),'LTE':([32,33,36,37,49,50,51,69,70,72,73,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,107,110,111,],[68,-38,-37,-39,68,68,68,-19,-20,-21,-22,68,-44,-45,-46,-47,-48,68,68,-51,-52,-53,-54,-55,-56,-57,-41,68,68,68,-42,-43,]),'ELSE':([45,46,52,53,54,76,78,79,80,85,104,106,108,109,114,115,116,117,],[-15,-16,-17,-18,-36,-32,-33,-34,-27,-35,-28,-29,112,113,-11,-13,-12,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,1,4,],[1,4,4,]),'function':([0,1,4,],[2,2,2,]),'args':([6,],[9,]),'statement':([8,10,19,20,39,75,86,112,113,],[13,22,39,42,75,75,109,115,116,]),'statementc':([8,10,20,86,112,113,],[14,23,43,108,114,117,]),'expression':([18,27,28,29,38,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,82,84,],[32,49,50,51,74,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,105,107,]),'statements':([19,39,75,],[40,77,77,]),'empty':([19,],[41,]),'argse':([27,71,],[48,102,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> function','code',1,'p_code','main.py',130),
  ('code -> code code','code',2,'p_code','main.py',131),
  ('function -> DEF NAME LPAREN RPAREN statement','function',5,'p_functionnoargs','main.py',137),
  ('function -> DEF NAME LPAREN RPAREN statementc','function',5,'p_functionnoargs','main.py',138),
  ('function -> DEF NAME LPAREN NAME RPAREN statement','function',6,'p_functiononearg','main.py',144),
  ('function -> DEF NAME LPAREN NAME RPAREN statementc','function',6,'p_functiononearg','main.py',145),
  ('function -> DEF NAME LPAREN args RPAREN statement','function',6,'p_functionmanyargs','main.py',151),
  ('function -> DEF NAME LPAREN args RPAREN statementc','function',6,'p_functionmanyargs','main.py',152),
  ('statement -> IF LPAREN expression RPAREN statementc','statement',5,'p_statement_if','main.py',158),
  ('statement -> IF LPAREN expression RPAREN statement','statement',5,'p_statement_if','main.py',159),
  ('statement -> IF LPAREN expression RPAREN statementc ELSE statementc','statement',7,'p_statement_ifelse','main.py',165),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_ifelse','main.py',166),
  ('statement -> IF LPAREN expression RPAREN statementc ELSE statement','statement',7,'p_statement_ifelse','main.py',167),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statementc','statement',7,'p_statement_ifelse','main.py',168),
  ('statement -> NAME DPLUS SEMICOLON','statement',3,'p_statement_dplus','main.py',174),
  ('statement -> NAME DMINUS SEMICOLON','statement',3,'p_statement_dplus','main.py',175),
  ('statement -> DPLUS NAME SEMICOLON','statement',3,'p_statement_pdplus','main.py',183),
  ('statement -> DMINUS NAME SEMICOLON','statement',3,'p_statement_pdplus','main.py',184),
  ('expression -> NAME DPLUS','expression',2,'p_expression_dplus','main.py',191),
  ('expression -> NAME DMINUS','expression',2,'p_expression_dplus','main.py',192),
  ('expression -> DPLUS NAME','expression',2,'p_expression_dplusp','main.py',198),
  ('expression -> DMINUS NAME','expression',2,'p_expression_dplusp','main.py',199),
  ('args -> args COMMA NAME','args',3,'p_args','main.py',215),
  ('args -> NAME COMMA NAME','args',3,'p_argso','main.py',222),
  ('argse -> argse COMMA expression','argse',3,'p_argse','main.py',228),
  ('argse -> expression COMMA expression','argse',3,'p_argseo','main.py',235),
  ('statement -> NAME LPAREN RPAREN SEMICOLON','statement',4,'p_st_fcallna','main.py',242),
  ('statement -> NAME LPAREN argse RPAREN SEMICOLON','statement',5,'p_st_fcall','main.py',248),
  ('statement -> NAME LPAREN expression RPAREN SEMICOLON','statement',5,'p_st_fcalla','main.py',254),
  ('statements -> statement statements','statements',2,'p_statements','main.py',261),
  ('statements -> statement statement','statements',2,'p_statements','main.py',262),
  ('statementc -> LBRAC statement RBRAC','statementc',3,'p_statementc','main.py',268),
  ('statementc -> LBRAC statements RBRAC','statementc',3,'p_statementc','main.py',269),
  ('statementc -> LBRAC empty RBRAC','statementc',3,'p_statementc','main.py',270),
  ('statement -> NAME EQUALS expression SEMICOLON','statement',4,'p_statementvardef','main.py',277),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statementreturn','main.py',282),
  ('expression -> INT','expression',1,'p_expression_basic','main.py',288),
  ('expression -> NAME','expression',1,'p_expression_basic','main.py',289),
  ('expression -> STRING','expression',1,'p_expression_str','main.py',295),
  ('expression -> NOT expression','expression',2,'p_expression_unary','main.py',301),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_e_fcallna','main.py',307),
  ('expression -> NAME LPAREN argse RPAREN','expression',4,'p_e_fcall','main.py',313),
  ('expression -> NAME LPAREN expression RPAREN','expression',4,'p_e_fcalla','main.py',319),
  ('expression -> expression MUL expression','expression',3,'p_expression_primitive','main.py',329),
  ('expression -> expression DIV expression','expression',3,'p_expression_primitive','main.py',330),
  ('expression -> expression PLUS expression','expression',3,'p_expression_primitive','main.py',331),
  ('expression -> expression MINUS expression','expression',3,'p_expression_primitive','main.py',332),
  ('expression -> expression AND expression','expression',3,'p_expression_primitive','main.py',333),
  ('expression -> expression AND2 expression','expression',3,'p_expression_primitive','main.py',334),
  ('expression -> expression OR2 expression','expression',3,'p_expression_primitive','main.py',335),
  ('expression -> expression OR expression','expression',3,'p_expression_primitive','main.py',336),
  ('expression -> expression DNE expression','expression',3,'p_expression_primitive','main.py',337),
  ('expression -> expression EQ expression','expression',3,'p_expression_primitive','main.py',338),
  ('expression -> expression GRT expression','expression',3,'p_expression_primitive','main.py',339),
  ('expression -> expression GRTE expression','expression',3,'p_expression_primitive','main.py',340),
  ('expression -> expression LT expression','expression',3,'p_expression_primitive','main.py',341),
  ('expression -> expression LTE expression','expression',3,'p_expression_primitive','main.py',342),
  ('empty -> <empty>','empty',0,'p_empty','main.py',352),
]
